<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>Twitter on { always: &#39;coding&#39; } </title>
      <generator uri="https://gohugo.io">Hugo</generator>
    <link>https://brianp.github.io/tags/twitter/</link>
    <language>en-us</language>
    
    
    <updated>Sat, 12 Feb 2011 00:00:00 UTC</updated>
    
    <item>
      <title>Saving Unique Twitter ID&#39;s &amp;amp; MySQL Integers</title>
      <link>https://brianp.github.io/momentos/2011/02/12/saving-unique-twitter-ids-and-mysql-integers/</link>
      <pubDate>Sat, 12 Feb 2011 00:00:00 UTC</pubDate>
      
      <guid>https://brianp.github.io/momentos/2011/02/12/saving-unique-twitter-ids-and-mysql-integers/</guid>
      <description>&lt;p&gt;TLDR; Don&amp;rsquo;t store Tweet ID&amp;rsquo;s as INT. Use BIGINT.&lt;/p&gt;

&lt;p&gt;While writing a Twitter application in Rails I was having an issue saving tweets to the database.&lt;/p&gt;

&lt;p&gt;A quick brief on the application: The app would download tweets from the mention timeline of a particular user. It would only download tweets it hadn&amp;rsquo;t already processed based on the last saved tweets unique id (as set by twitter). All the data from the tweets were making it into the database as expected but every time the application downloaded tweets it would re-download the same tweets.&lt;/p&gt;

&lt;p&gt;After being quite perplexed for a period of time and trying many different solutions I realized that Twitters unique tweet ID did not match the tweet_id being stored locally. This was caused by the sheer size of Twitters id number. I was storing it as an INT which can only go
up to 2147483647 (MySQL). Where Twitters current tweet id&amp;rsquo;s reside in around 36331797625184256.&lt;/p&gt;

&lt;p&gt;I would need to use MySQL&amp;rsquo;s BIGINT which can go up to 9223372036854775807 to be able to save the id as a number.&lt;/p&gt;

&lt;p&gt;Unfortunately BIGINT ins&amp;rsquo;t a standard type to set via rails migrations.
As per this post by &lt;a href=&#39;http://spin.atomicobject.com/2011/05/19/ruby-on-rails-and-mysql-bigint/&#39;&gt;Dustin Tinney - Ruby on Rails &amp;amp; MYSQL BIGINT&lt;/a&gt; the proper way to use big int is to create a regular integer column via migrations and the change the column to BIGINT.&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #ffffff&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #008800; font-weight: bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color: #BB0066; font-weight: bold&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color: #333333&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #0066BB; font-weight: bold&#34;&gt;up&lt;/span&gt;
  create_table(&lt;span style=&#34;color: #AA6600&#34;&gt;:people&lt;/span&gt;) &lt;span style=&#34;color: #008800; font-weight: bold&#34;&gt;do&lt;/span&gt; &lt;span style=&#34;color: #333333&#34;&gt;|&lt;/span&gt;t&lt;span style=&#34;color: #333333&#34;&gt;|&lt;/span&gt;
    t&lt;span style=&#34;color: #333333&#34;&gt;.&lt;/span&gt;integer &lt;span style=&#34;color: #AA6600&#34;&gt;:number_of_facebook_friends&lt;/span&gt;
  &lt;span style=&#34;color: #008800; font-weight: bold&#34;&gt;end&lt;/span&gt;

  change_column &lt;span style=&#34;color: #AA6600&#34;&gt;:people&lt;/span&gt;, &lt;span style=&#34;color: #AA6600&#34;&gt;:number_of_facebook_friends&lt;/span&gt;, &lt;span style=&#34;color: #AA6600&#34;&gt;:bigint&lt;/span&gt;
&lt;span style=&#34;color: #008800; font-weight: bold&#34;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
